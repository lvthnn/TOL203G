n <- 100000
v <- c()
for (i in 1:n) {
res <- sample(X, size=1)
v <- append(v, res)
X <- X[-2]
print(X)
}
?sample
X
print(X)
res <- sample(X, size=1)
v
X
X[-1]
Xnew <- X[-1]
Xnew
Xnew[1]
Xnew[2 + 1]
Xnew
setdiff(Xnew, 5e+03)
dfSim %>%
group_by(v) %>%
count()
n <- 100000
v <- c()
for (i in 1:n) {
init_guess <- sample(X, size=1)
X_new <- X[-2]
res <- setdiff(X_new, init_guess)
v <- append(v, res)
}
dfSim <- data.frame(v)
dfSim %>%
group_by(v) %>%
count()
library(tidyverse)
# Gerum ráð fyrir að virði geitar
geit <- 5000
bill <- 5000000
X <- c(geit, geit, bill)
n <- 100000
v <- c()
for (i in 1:n) {
res <- sample(X, size=1)
v <- append(v, res)
}
dfSim <- data.frame(v)
dfSim %>%
group_by(v) %>%
count()
n <- 100000
v <- c()
for (i in 1:n) {
init_guess <- sample(X, size=1)
X_new <- X[-2]
res <- setdiff(X_new, init_guess)
v <- append(v, res)
}
dfSim <- data.frame(v)
dfSim %>%
group_by(v) %>%
count()
n <- 100000
v <- c()
for (i in 1:n) {
init_guess <- sample(X, size=1)
X_new <- X[-2]
res <- setdiff(X_new, init_guess)
v <- append(v, res)
}
dfSim <- data.frame(v)
dfSim %>%
group_by(v) %>%
count()
2/3 * geit + 1/3 * bill
2/3 * geit + 1/3 * bill
1/3 * geit + 2/3 * bill
ggplot(aes(x=Xlab, y=p)) +
geom_bar()
ggplot(dfVis, aes(x=Xlab, y=p)) +
geom_bar()
dfVis <- data.frame(Xlab, p)
ggplot(dfVis, aes(x=Xlab, y=p)) +
geom_bar()
Xlab <- c("Geit", "Geit", "Bíll")
p <- c(1/3, 1/3, 2/3)
dfVis <- data.frame(Xlab, p)
ggplot(dfVis, aes(x=Xlab, y=p)) +
geom_bar()
dfVis
Xlab <- c("Geit", "Geit", "Bíll")
p <- c(1/3, 1/3, 1/3)
dfVis <- data.frame(Xlab, p)
ggplot(dfVis, aes(x=Xlab, y=p)) +
geom_bar()
Xlab <- c("Geit", "Geit", "Bíll")
p <- c(1/3, 1/3, 1/3)
dfVis <- data.frame(Xlab, p)
ggplot(dfVis, aes(x=Xlab)) +
geom_bar()
Xlab <- c("Geit", "Geit", "Bíll")
p <- c(1/3, 1/3, 1/3)
dfVis <- data.frame(Xlab, p)
ggplot(dfVis, aes(x=Xlab)) +
geom_bar(normalize=TRUE)
Xlab <- c("Geit", "Geit", "Bíll")
p <- c(1/3, 1/3, 1/3)
dfVis <- data.frame(Xlab, p)
ggplot(dfVis, aes(x=Xlab)) +
geom_bar(normalize=TRUE, stat="bin")
---
title: "R verkefni 1"
Xlab <- c("Geit", "Geit", "Bíll")
p <- c(1/3, 1/3, 1/3)
dfVis <- data.frame(Xlab, p)
ggplot(dfVis, aes(x=Xlab)) +
geom_bar(normalize=TRUE, stat="identity")
Xlab <- c("Geit", "Geit", "Bíll")
p <- c(1/3, 1/3, 1/3)
dfVis <- data.frame(Xlab, p)
ggplot(dfVis, aes(x=Xlab)) +
geom_bar(normalize=TRUE, stat="count")
Xlab <- c("Geit", "Geit", "Bíll")
p <- c(1/3, 1/3, 1/3)
dfVis <- data.frame(Xlab, p)
ggplot(dfVis, aes(x=Xlab, y=p)) +
geom_bar(normalize=TRUE, stat="identity")
clear
clear()
cls()
clear
?clear
??clear
Ω <- c(1, 2, 3, 4, 5, 6)
T <- sample(Ω, size=10000, replace=TRUE)
T
mean(T)
t = seq(100000, by=1)
t = seq(100000, each=1)
t = seq(100000e)
t = seq(100000)
t
plot(t,T)
t = seq(1000)
plot(t,T)
t = seq(10000)
T <- sample(Ω, size=10000, replace=TRUE)
plot(t, T)
µT <- cumsum(T) / 10000
µT
plot(t, T)
plot(t, T, 'l')
plot(t, µT, 'l')
µT <- cummean(T)
µT <- cumsum(T) / seqalong(T)
µT <- cumsum(T) / seq_along(T)
µT
plot(t, T)
plot(t, µT, 'l')
f <- function(x) {}
f <- function(x) { return(x - 2) }
f(2)
f(3)
?linspace
'seq'
?seq
seq(0, 20, length.out=100)
x <- seq(0, 20, length.out=100)
y <- f(x)
y
plot(x, y9)
plot(x, y)
plot(x, y, 'l')
h <- 1e-10
h
dy <- f(x + h)
dx <- h
dy/dx
plot(x, dy/dx)
plot(x, dy/dx, 'l')
dy <- f(x + h) - f(x)
plot(x, dy/dx, 'l')
dy/dx
f(x + h)
f(x + h) - f(x)
f(x + h) - f(x)
h
(f(x + h) - f(x))/(h)
plot(x, (f(x + h) - f(x))/(h))
plot(x, (f(x + h) - f(x))/(h), 'l')
f <- function(x) { return(x * x) }
xs <- seq(0, 20, length.out = 1000)
ys = f(xs)
dy <- f(x + h) - f(x)
dx <- h
plot(x, dy/dx)
plot(x, dy/dx, 'l')
plot(x, f(x))
plot(x, f(x), 'l')
plot(x, dy/dx, 'l')
f <- function(x) { return(sin(x)) }
dy <- f(x + h) - f(x)
dx <- h
plot(x, dy/dx, 'l')
plot(x, f(x), 'l')
?barplot
Xlab <- c("Geit", "Geit", "Bíll")
p <- c(1/3, 1/3, 1/3)
dfVis <- data.frame(Xlab, p)
baprlot(p)
Xlab <- c("Geit", "Geit", "Bíll")
p <- c(1/3, 1/3, 1/3)
dfVis <- data.frame(Xlab, p)
barplot(p)
ggplot(dfVis, aes(x=Xlab, y=p)) +
geom_bar(stat="identity") +
labs(
title="Líkur vinnings ef ekki er skipt um hurð",
x="x",
y="P(X = x)"
)
Xlab <- c("Geit", "Geit", "Bíll")
p <- c(1/3, 1/3, 1/3)
dfVis <- data.frame(Xlab, p)
barplot(Xlab, p)
Xlab <- c("Geit", "Geit", "Bíll")
p <- c(1/3, 1/3, 1/3)
dfVis <- data.frame(Xlab, p)
ggplot(dfVis, aes(x=Xlab, y=p)) +
geom_bar(stat="identity") +
labs(
title="Líkur vinnings ef ekki er skipt um hurð",
x="x",
y="P(X = x)"
)
Xlab <- c("Geit", "Geit", "Bíll")
p <- c(1/3, 1/3, 1/3)
dfVis <- data.frame(Xlab, p)
ggplot(dfVis, aes(x=Xlab, y=p)) +
geom_bar(stat="identity") +
labs(
title="Líkur vinnings ef ekki er skipt um hurð",
x="x",
y="P(X = x)"
)
Xlab <- c("Geit", "Geit", "Bíll")
p <- c(1/3, 1/3, 1/3)
dfVis <- data.frame(Xlab, p)
ggplot(dfVis, aes(x=Xlab, y=p)) +
geom_bar(stat="identity") +
labs(
title="Líkur vinnings ef ekki er skipt um hurð",
x="x",
y="P(X = x)"
)
library(tidyverse)
geit <- 5000
bill <- 5000000
X <- c(geit, geit, bill)
Xlab <- c("Geit", "Geit", "Bíll")
p <- c(1/3, 1/3, 1/3)
dfVis <- data.frame(Xlab, p)
ggplot(dfVis, aes(x=Xlab, y=p)) +
geom_bar(stat="identity") +
labs(
title="Líkur vinnings ef ekki er skipt um hurð",
x="x",
y="P(X = x)"
)
n <- 100000
v <- c()
for (i in 1:n) {
res <- sample(X, size=1)
v <- append(v, res)
}
dfSim <- data.frame(v)
dfSim_res <- dfSim %>%
group_by(v) %>%
count()
dfSim_res
n <- 100000
v <- c()
for (i in 1:n) {
init_guess <- sample(X, size=1)
X_new <- X[-2]
res <- setdiff(X_new, init_guess)
v <- append(v, res)
}
dfSim <- data.frame(v)
dfSim_resChange <- dfSim %>%
group_by(v) %>%
count()
dfSim_resChange
source("~/.active-rstudio-document", echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
geit_eq <- 5000000
e1 <- 2/3 * bill + 1/3 * geit_eq
e2 <- 1/3 * bill + 2/3 * geit_eq
e1
e2
3335000 - 1/3 * bill
3 * 1668333
x <- c(1000, 2000, 4000, 8000, 16000)
y <- c(0.02, 0.05, 0.20, 0.81, 3.25)
lm(log(x), log(y))
lm(log(x) ~ log(y))
50000^@
50000^2
3.25+4
3.25*4
13*4
y / y
step(y)
y / lag(y)
lag(y)
y
lag(y)/y
lag(y)
dplyr::lag(y)
y / dplyr::lag(y)
log2(y / dplyr::lag(y))
a <- y[2]
a
b <- log2(y / dplyr::lag(y))
b[2]
b[3]
y[3]
a <- y[3]/(x[3]^b[3])
a
a*50000^b
b
a*50000^2
dbinom
dbinom(5, 100, 0.5)
dbinom(50, 100, 0.5)
X <- c(seq(1, 100), 100, 0.5)
X
X <- dbinom(c(seq(1, 100), 100, 0.5)
)
X <- dbinom(seq(1, 100, 100), 100, 0.5)
X
i <- seq(1, 10)
p <- dbinom(i, 10, 0.4)
i
p
plot(i, p)
hist(i, p)
hist(p)
hist(i)
barplot(i, p)
barplot(p, i)
barplot(p, names.arg=i)
poisson <- seq(1, 20)
p_pois <- dpois(poisson, 14)
barplot(p_pois, names.arg=poisson)
poisson <- seq(1, 20, by=2)
poisson
p_pois <- dpois(poisson, 14)
barplot(p_pois, names.arg=poisson)
poisson <- seq(0, 20, by=2)
p_pois <- dpois(poisson, 14)
barplot(p_pois, names.arg=poisson)+
barplot(p_pois, names.arg=poisson)
poisson
poisson <- seq(1, 20)
poisson
p_pois <- dpois(poisson, 14)
barplot(p_pois, names.arg=poisson)
# Visualizing a binomial distribution
i <- seq(1, 20)          # our indices
p <- dbinom(i, 200, 0.5) # probabilities
barplot(p, names.arg=i, main="Binomial distribution",
xlab="X", ylab="P{X = x}")
p <- dbinom(i, 0.5, 200) # probabilities
# Visualizing a binomial distribution
i <- seq(1, 20)          # our indices
p <- dbinom(i, 0.5, 200) # probabilities
barplot(p, names.arg=i, main="Binomial distribution",
xlab="X", ylab="P{X = x}")
?dbinom
source("~/Documents/Distributions.R", echo=TRUE)
source("~/Documents/Distributions.R", echo=TRUE)
# Visualizing a binomial distribution
i <- seq(1, 20)          # our indices
p <- dbinom(i, 20, 0.4)  # probabilities
barplot(p, names.arg=i, main="X ~ Bin(20, 0.4)",
xlab="X", ylab="Pr(X = x)")
# Visualizing a binomial distribution
i <- seq(1, 20)          # our indices
p <- dbinom(i, 20, 0.4)  # probabilities
barplot(p, names.arg=i, main="Binomial distribution",
xlab="X", ylab="Pr(X = x)")
# Visualizing a binomial distribution
i <- seq(1, 20)          # our indices
p <- dbinom(i, 20, 0.4)  # probabilities
barplot(p, names.arg=i, main="X ~ Bin(20, 0.4)",
xlab="X", ylab="Pr(X = x)")
# Visualizing a binomial distribution
i <- seq(1, 20)          # our indices
p <- dbinom(i, 20, 0.4)  # probabilities
barplot(p, names.arg=i, main="X ~ Bin(20, 0.4)",
xlab="X", ylab="Pr(X = x)")
156/228
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
skradir <- 228
maettu <- 156
p <- (skradir - maettu) / maettu    # líkur þess að mæta ekki
p
skradir <- 228
maettu <- 156
p <- (skradir - maettu) / skradir    # líkur þess að mæta ekki
p
?dhypergeom
dhyper(1, maettu, maettu_ekki)
skradir <- 228
maettu  <- 156
maettu_ekki <- 228 - maettu
p <- maettu / skradir    # líkur þess að mæta
q <- 1 - p               # líkur þess að mæta ekki
dhyper(1, maettu, maettu_ekki)
dhyper(1, maettu, maettu_ekki, 5)
(1 - maettu)^4
(1 - p)^4
q^4
skradir <- 228
maettu  <- 156
maettu_ekki <- 228 - maettu
p <- maettu / skradir    # líkur þess að mæta
q <- 1 - p               # líkur þess að mæta ekki
dhyper(1, maettu_ekki, maettu, 5)
skradir <- 228
maettu  <- 156
maettu_ekki <- 228 - maettu
p <- maettu / skradir    # líkur þess að mæta
q <- 1 - p               # líkur þess að mæta ekki
dhyper(1, maettu, maettu_ekki, 5)
dbinom(1, 5, p)
p * q^4
skradir <- 228
maettu  <- 156
maettu_ekki <- 228 - maettu
p <- maettu_ekki / skradir
skradir <- 228
maettu  <- 156
maettu_ekki <- 228 - maettu
p <- maettu_ekki / skradir
p
p^5
skradir <- 228
maettu  <- 156
maettu_ekki <- 228 - maettu
p <- maettu_ekki / skradir
einn_nemandi <- p^5
einn_nemandi
skradir <- 228
maettu  <- 156
maettu_ekki <- 228 - maettu
p <- maettu_ekki / skradir
einn_nemandi <- p^5
einn_nemandi
skradir <- 228
maettu  <- 156
maettu_ekki <- 228 - maettu
p <- maettu_ekki / skradir
einn_nemandi <- p^5
dbinom(5, 5, p)
einn_nemandi
Þetta er í raun úrkynja tilvik af tvíkostadreifingu. Við getum líka metið þessi líkindi með því að reikna líkur þess að meðal þeirra 5 í hópnum okkar mæti enginn. Vegna þess að þetta eru óháðir atburðir reiknum við margfeldi þess að atburðirnir geri, þ.e.
s
pwd()
cd()
getcwd()
getwd()
setwd("/Users/kari/Github/TOL203G/DT2/")
dir()\
dir()
df <- fread::read_txt(data.txt)
install.packages("fread")
library(dplyr)
read_tsv("data.txt")
reader
readr
library(readr)
library(tidyverse)
read_csv("data.txt")
read_tsv("data.txt")
read_tsv("data.txt", index=FALSE)
read_tsv("data.txt", col_names=FALSE)
read_tsv("data.txt", col_names=c("N", "Time"))
df <- read_tsv("data.txt", col_names=c("N", "Time"))
df
plot(df$N, df$Time, 'l')
lm(df$N, df$Time)
df %>%
filter(Time > 0)
df_trunc <- df %>% filter(Time > 0)
df_trunc$Time / lag(df_trunc$Time)
prop_time <- df_trunc$Time / lag(df_trunc$Time)
plot(prop_time)
plot(prop_time, 'l')
df_trunc <- df_trunc %>%
mutate(prop_time = Time / lag(Time))
df_trunc
df_trunc %>% replace.na(0)
ggplot(df_trunc, aes(x=N, y=prop_time)) +
geom_line()
plot(prop_time, 'l')
?plot
plot(prop_time, type='l')

bijok
binom
binom(2, 4)
choose(156, 1)
choose(78, 5)
(choose (156, 1) * choose(78, 5)) / choose(228, 6)
skradir <- 228
maettu  <- 156
maettu_ekki <- 228 - maettu
p <- maettu_ekki / skradir
dhyper(5, maettu_ekki, maettu, 5)
(choose(156, 1) * choose(78, 5)) / (choose(228, 6))
156 + 78
156 + 72
(choose(156, 1) * choose(72, 5)) / (choose(228, 6))
(choose(156, 5) * choose(72, 1)) / (choose(228, 6))
?dnorm
1/9
1/$
skradir <- 228
maettu  <- 156
maettu_ekki <- 228 - maettu
dhyper(5, maettu, maettu_ekki, 5)
(choose(156, 1) * choose(78, 1)) / (choose(228, 6))
(choose(156, 1) * choose(78, 5)) / (choose(228, 6))
(choose(156, 1) * choose(72, 5)) / (choose(228, 6))
?dhyper
skradir <- 228
maettu  <- 156
maettu_ekki <- 228 - maettu
dhyper(6, maettu, maettu_ekki, 5)
skradir <- 228
maettu  <- 156
maettu_ekki <- 228 - maettu
dhyper(6, maettu_ekki, maettu, 5)
skradir <- 228
maettu  <- 156
maettu_ekki <- 228 - maettu
dhyper(5, maettu_ekki, maettu, 6)
**(B)** Getið þið lýst því vandamáli stærðfræðilega?
**(B)** Getið þið lýst því vandamáli stærðfræðilega?
**(B)** Getið þið lýst því vandamáli stærðfræðilega?
\newpage
```{r}
?seq
pairing <- seq(1, 38, length.out=228)
pairing
pairing <- rep(1, 38, length.out=228)
pairing
seq
?seq
?rep
6*38
pairing <- rep(1, 38, times=6)
pairing
pairing <- rep(c(1, 38), times=6)
pairing
pairing <- rep(1:38, times=6)
pairing
groups <- sample(pairing, 156)
groups
sumdf <- data.frame(groups)
sumdf
count(sumdf)
count(unique(sumdf)
count(unique(sumdf))
n_sims <- 1000000
for (i in 1:n_sims) {
pairing <- rep(1:38, times=6)
groups <- sample(pairing, 156)
}
pairing
groups
groups{2}
groups'\'
groups[2]
groups[1]
length(groups)
groups
data.table(groups)
library(data.table)
data.table(groups)
data.table(as.factorial(groups))
data.table(as.factor(groups))
table(groups)
table(groups)[1]
table(groups)[2]
table(groups)[38]
sum(groups)
sum(table(groups))
library(data.table)
n_sims <- 1000000
num_groups <- 38
for (i in 1:n_sims) {
pairing <- rep(1:num_groups, times=6)
groups <- sample(pairing, 156)
num_members <- table(groups)
cnt <- 0
for (i in 1:length(groups)) {
if (num_members[i] == 1) cnt <- cnt + 1
}
}
num_members[i] == 2
num_members[2] == 2
num_members[1] == 2
num_members[3] == 2
num_members <- table(groups)
num_members[3] == 2
num_mbembers
num_membmers
num_members
cnt
library(data.table)
n_sims <- 1000000
num_groups <- 38
cnt <- 0
for (i in 1:n_sims) {
pairing <- rep(1:num_groups, times=6)
groups <- sample(pairing, 156)
num_members <- table(groups)
for (i in 1:length(groups)) {
if (num_members[i] == 1) cnt <- cnt + 1
}
}
---
title: "R Verkefni 2 — Mikilvægar líkindardreifing"
library(data.table)
n_sims <- 1000000
num_groups <- 38
cnt <- 0
pairing <- rep(1:num_groups, times=6)
groups <- sample(pairing, 156)
num_members <- table(groups)
for (i in 1:length(groups)) {
if (num_members[i] == 1) { cnt <- cnt + 1 }
}
num_members
pairing <- rep(1:num_groups, times=6)
groups <- sample(pairing, 156)
num_members <- table(groups)
for (i in 1:length(num_members)) {
if (num_members[i] == 1) { cnt <- cnt + 1 }
}
cnt
library(data.table)
n_sims <- 1000000
num_groups <- 38
cnt <- 0
for (i in 1:n_sims) {
pairing <- rep(1:num_groups, times=6)
groups <- sample(pairing, 156)
num_members <- table(groups)
for (i in 1:length(num_members)) {
if (num_members[i] == 1) { cnt <- cnt + 1 }
}
}
library(data.table)
n_sims <- 100
num_groups <- 38
cnt <- 0
for (i in 1:n_sims) {
pairing <- rep(1:num_groups, times=6)
groups <- sample(pairing, 156)
num_members <- table(groups)
for (i in 1:length(num_members)) {
if (num_members[i] == 1) { cnt <- cnt + 1 }
}
}
print(count)
cnt
library(data.table)
n_sims <- 10000
num_groups <- 38
cnt <- 0
for (i in 1:n_sims) {
pairing <- rep(1:num_groups, times=6)
groups <- sample(pairing, 156)
num_members <- table(groups)
for (i in 1:length(num_members)) {
if (num_members[i] == 1) { cnt <- cnt + 1 }
}
}
disp(count)
library(data.table)
n_sims <- 10000
num_groups <- 38
cnt <- 0
for (i in 1:n_sims) {
pairing <- rep(1:num_groups, times=6)
groups <- sample(pairing, 156)
num_members <- table(groups)
for (i in 1:length(num_members)) {
if (num_members[i] == 1) { cnt <- cnt + 1 }
}
}
count
library(data.table)
n_sims <- 10000
num_groups <- 38
cnt <- 0
for (i in 1:n_sims) {
pairing <- rep(1:num_groups, times=6)
groups <- sample(pairing, 156)
num_members <- table(groups)
for (i in 1:length(num_members)) {
if (num_members[i] == 1) { cnt <- cnt + 1 }
}
}
cnt
library(data.table)
n_sims <- 10000
num_groups <- 38
cnt <- 0
for (i in 1:n_sims) {
pairing <- rep(1:num_groups, times=6)
groups <- sample(pairing, 156)
num_members <- table(groups)
for (i in 1:length(num_members)) {
if (num_members[i] == 1) { cnt <- cnt + 1 }
}
}
cnt / (n_sims * 38)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(data.table)
sims <- function(n_groups, n_sims) {
cnt <- 0
for (i in 1:n_sims) {
pairing <- rep(1:n_groups, times=6)
groups <- sample(pairing, 156)
n_members <- table(groups)
for (i in 1:length(n_members)) {
if (n_members[i] == 1) { cnt <- cnt + 1 }
}
}
return(cnt / (n_sims * 38))
}
sims(38, 100000)
sim <- function(n_groups, n_sims) {
cnt <- 0
for (i in 1:n_sims) {
pairing <- rep(1:n_groups, times=6)
groups <- sample(pairing, 156)
n_members <- table(groups)
for (i in 1:length(n_members))
if (n_members[i] == 1) cnt <- cnt + 1
}
return(cnt / (n_sims * 38))
}
sim(38, 100000)
num_groups <- seq(15, 38, by=2)
num_groups
plot(num_groups, prob_single, 'l')
num_groups  <- seq(16, 38, by=2)
prob_single <- sim(num_groups, 10000)
plot(num_groups, prob_single, 'l')
num_groups  <- seq(16, 38, by=2)
n_sim_const <- 10000
prob_single <- c()
for (i in 1:length(num_groups))
prob_single <- append(prob_single, sim(num_groups[i], n_sim_const))
pairing <- rep(1:n_groups, times=floor(228 / n_groups))
sim <- function(n_groups, n_sims) {
cnt <- 0
for (i in 1:n_sims) {
pairing <- rep(1:n_groups, times=floor(228 / n_groups))
groups <- sample(pairing, 156)
n_members <- table(groups)
for (i in 1:length(n_members))
if (n_members[i] == 1) cnt <- cnt + 1
}
return(cnt / (n_sims * 38))
}
sim(38, 100000)
num_groups  <- seq(16, 38, by=2)
n_sim_const <- 10000
prob_single <- c()
for (i in 1:length(num_groups))
prob_single <- append(prob_single, sim(num_groups[i], n_sim_const))
plot(num_groups, prob_single, 'l')
num_groups  <- seq(30, 50, by=2)
n_sim_const <- 10000
prob_single <- c()
for (i in 1:length(num_groups))
prob_single <- append(prob_single, sim(num_groups[i], n_sim_const))
plot(num_groups, prob_single, 'l')
num_groups  <- seq(30, 60, by=2)
n_sim_const <- 10000
prob_single <- c()
for (i in 1:length(num_groups))
prob_single <- append(prob_single, sim(num_groups[i], n_sim_const))
plot(num_groups, prob_single, 'l')
num_groups  <- seq(30, 55, by=2)
n_sim_const <- 10000
prob_single <- c()
for (i in 1:length(num_groups))
prob_single <- append(prob_single, sim(num_groups[i], n_sim_const))
plot(num_groups, prob_single, 'l')
num_groups  <- seq(30, 55, by=2)
n_sim_const <- 10000
prob_single <- c()
for (i in 1:length(num_groups))
prob_single <- append(prob_single, sim(num_groups[i], n_sim_const))
plot(num_groups, prob_single, 'l', xlab='Fjöldi hópa',  ylab='Líkur á því að e-r sé einn í hóp')
num_groups    <- seq(30, 55, by=2)
n_sim_const   <- 10000
aggregate_num <- 10
prob_single   <- c()
for (j in 1:aggregate_num) {
running_sum <- 0
for (i in 1:length(num_groups))
running_sum <- running_sum + sim(num_groups[i], n_sim_const)
prob_single <- append(prob_single, running_sum / aggregate_num)
}
plot(num_groups, prob_single, 'l', xlab='Fjöldi hópa',  ylab='Líkur á einum í hóp')
prob_single
prob_single <- append(prob_single, running_sum / aggregate_num)
num_groups    <- seq(30, 55, by=2)
n_sim_const   <- 10000
aggregate_num <- 10
prob_single   <- c()
for (i in 1:length(num_groups)) {
running_sum <- 0
for (j in 1:aggregate_num)
running_sum <- running_sum + sim(num_groups[i], n_sim_const)
prob_single <- append(prob_single, running_sum / aggregate_num)
}
num_groups    <- seq(30, 55, by=2)
n_sim_const   <- 10000
aggregate_num <- 10
prob_single   <- c()
for (i in 1:length(num_groups)) {
running_sum <- 0
for (j in 1:aggregate_num)
running_sum <- running_sum + sim(num_groups[i], n_sim_const)
prob_single <- append(prob_single, running_sum / aggregate_num)
}
sim <- function(n_groups, n_sims) {
cnt <- 0
for (i in 1:n_sims) {
pairing <- rep(1:n_groups, times=floor(228 / n_groups))
groups <- sample(pairing, 156)
n_members <- table(groups)
for (i in 1:length(n_members))
if (n_members[i] == 1) cnt <- cnt + 1
}
return(cnt / (n_sims * n_groups))
}
sim(38, 100000)
num_groups    <- seq(30, 55, by=2)
n_sim_const   <- 10000
aggregate_num <- 10
prob_single   <- c()
for (i in 1:length(num_groups)) {
running_sum <- 0
for (j in 1:aggregate_num)
running_sum <- running_sum + sim(num_groups[i], n_sim_const)
prob_single <- append(prob_single, running_sum / aggregate_num)
}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(data.table)
num_groups    <- seq(30, 55, by=2)
n_sim_const   <- 10000
aggregate_num <- 10
prob_single   <- c()
for (i in 1:length(num_groups)) {
running_sum <- 0
for (j in 1:aggregate_num)
running_sum <- running_sum + sim(num_groups[i], n_sim_const)
prob_single <- append(prob_single, running_sum / aggregate_num)
}
plot(num_groups, prob_single, 'l', xlab='Fjöldi hópa',  ylab='Líkur á einum í hóp')
num_groups    <- seq(30, 55, by=2)
n_sim_const   <- 10000
aggregate_num <- 3
prob_single   <- c()
for (i in 1:length(num_groups)) {
running_sum <- 0
for (j in 1:aggregate_num)
running_sum <- running_sum + sim(num_groups[i], n_sim_const)
prob_single <- append(prob_single, running_sum / aggregate_num)
}
plot(num_groups, prob_single, 'l', xlab='Fjöldi hópa',  ylab='Líkur á einum í hóp')
num_groups    <- seq(30, 55, by=2)
n_sim_const   <- 10000
aggregate_num <- 5
prob_single   <- c()
for (i in 1:length(num_groups)) {
running_sum <- 0
for (j in 1:aggregate_num)
running_sum <- running_sum + sim(num_groups[i], n_sim_const)
prob_single <- append(prob_single, running_sum / aggregate_num)
}
plot(num_groups, prob_single, 'l', xlab='Fjöldi hópa',  ylab='Líkur á einum í hóp')
num_groups
prob_single
df_sp3a <- data.frame(num_groups, prob_single)
df_sp3a
ggplot(df_sp3a, aes(x = num_groups, y = prob_single) +
geom_line()
library(tidyverse)
ggplot(df_sp3a, aes(x = num_groups, y = prob_single) +
geom_line()
ggplot(df_sp3a, aes(x = num_groups, y = prob_single)) +
geom_line()
plot(df_sp3a$num_groups, df_sp3a$prob_single)
plot(df_sp3a$num_groups, df_sp3a$prob_single, 'l')
lm(df_sp3a$num_groups, df_sp3a$prob_single)
lm(df_sp3a$num_groups, df_sp3a$prob_single)
lm(df_sp3a$prob_single ~ df_sp3a$num_groups)
polyfit(df_sp3a$prob_single ~ df_sp3a$num_groups)
polyFit(df_sp3a$prob_single ~ df_sp3a$num_groups)
library(polyreg)
plot(df_sp3a$num_groups, df_sp3a$prob_single, 'l',
xlab='Fjöldi hópa', ylab='Líkur á einstökung')
df_sp3a <- data.frame(num_groups, prob_single)
plot(df_sp3a$num_groups, df_sp3a$prob_single, 'l',
xlab='Fjöldi hópa', ylab='Líkur á einstökung')
getcwd()
getwd()
setwd("Github/TOL203G/HD2/D2/")
library(tidyverse)
df <- read_tsv("data.txt")
dir()
setwd("../..")
getwd()
setwd("DT2/")
df <- read_tsv("data.txt")
df
?read_tsv
df <- read_tsv("data.txt", col_names = c("N", "T"))
df
df[T > 0]
df %>% filter(T > 0)
df <- df %>% filter(T > 0)
df
df %>%
mutate(doublingProp = lag(T)/T)
df %>%
mutate(doublingProp = T/lag(T))
df <- df %>%
mutate(doublingProp = T/lag(T))
df
plot(df$N, df$doublingProp)
plot(df$N, df$doublingProp, 'l')
plot(df$N, df$T)
plot(df$N, df$T, 'l')
plot(df$N, df$doublingProp, 'l', 'main='T(2N)/T(N)', xlab='N', ylab='T(2N)/T(N)')
plot(df$N, df$doublingProp, 'l', main='T(2N)/T(N)', xlab='N', ylab='T(2N)/T(N)')
plot(df$N, df$doublingProp, 'l', xlab='N', ylab='T(2N)/T(N)')
plot(df$N, df$doublingProp, 'l', xlab='N', ylab='T(2N)/T(N)', frame=FALSE)
pdf("rplot.pdf")
plot(df$N, df$doublingProp, 'l', xlab='N', ylab='T(2N)/T(N)', frame=FALSE)
dev.off()
png("rplot.png")
plot(df$N, df$doublingProp, 'l', xlab='N', ylab='T(2N)/T(N)', frame=FALSE)
dev.off()
png("rplot.png", width=350, height=350)
plot(df$N, df$doublingProp, 'l', xlab='N', ylab='T(2N)/T(N)', frame=FALSE)
dev.off()
png("rplot.png", width=500, height=250)
plot(df$N, df$doublingProp, 'l', xlab='N', ylab='T(2N)/T(N)', frame=FALSE)
dev.off()
plot(df$N, df$doublingProp, 'l', xlab='N', ylab='T(2N)/T(N)', frame=FALSE, ylim=c(0, 8))
png("rplot.png", width=1240, height=780)
plot(df$N, df$doublingProp, 'l', xlab='N', ylab='T(2N)/T(N)', frame=FALSE, ylim=c(0, 8))
dev.off()
png("rplot.png", width=500, height=250)
plot(df$N, df$doublingProp, 'l', xlab='N', ylab='T(2N)/T(N)', frame=FALSE, ylim=c(0, 8))
dev.off()
4*lg(10)/10^9
4*log2(10)/10^9
4*log2(100)/10^9
4*log2(1000)/10^9
4*log2(10^6)/10^9
4*log2(10^9)/10^9
N <- c(10, 10^2, 10^3, 10^6, 10^9)
N
f <- function(N) {}
f <- function(N) {
return(10 * N * log2(N))
}
10 * 100 * log2(100)
(10 * 100 * log2(100))/10^9
f <- function(N) {
return((10 * N * log2(N))/10^9)
}
f(10^2)
f(N)
(10 * 10^3 * log(10^3))/10^9
2.98 * 10^2
298 / 60
f <- function(N) {}
f <- function(N) {
return( (2 * N^2) / 10^9 )
f(100)
}
f <- function(N) {
return( (2 * N^2) / 10^9 )
}
f(100)
f(N)
2 * 10^3
2000 / 60
2 * 10^9
2 * 10^9 / 60
2 * 10^9 / 3600
2 * 10^9 / 3600 * 24
2 * 10^9 / 3600 * 24 * 365
2 * 10^9 / (3600 * 24 * 365)
2 * 10^9
